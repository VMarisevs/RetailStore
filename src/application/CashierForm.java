/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CashierForm.java
 *
 * Created on 27-Jan-2013, 13:50:27
 */

package application;

import validation.*;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import java.io.PrintWriter;
import java.text.DecimalFormat;
/**
 *
 * @author Evilguy
 */
public class CashierForm extends javax.swing.JFrame {

    //creating a list of cashier objects
    ArrayList<Cashier> cashierList = new ArrayList<Cashier>();
    //creating a variable cashier
    Cashier varCashier = new Cashier();
    //cashier identificator
    int cashierID = 0;
    //swing list
    DefaultListModel cashierListInfo = new DefaultListModel();

    DecimalFormat df = new DecimalFormat("0.00");
    /** Creates new form CashierForm */
    public CashierForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstCashierList = new javax.swing.JList(cashierListInfo);
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlCashierInformation = new javax.swing.JPanel();
        txtPPSNumber = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtDateOfBirth = new javax.swing.JTextField();
        lblPPSNumber = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblDateOfBirth = new javax.swing.JLabel();
        cboxCity = new javax.swing.JComboBox();
        cboxGender = new javax.swing.JComboBox();
        btnSaveAs = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        pnlPayrollCalculation = new javax.swing.JPanel();
        txtHoursPerWeek = new javax.swing.JTextField();
        txtFeePerHour = new javax.swing.JTextField();
        txtOvertimeHours = new javax.swing.JTextField();
        lblHoursPerWeek = new javax.swing.JLabel();
        lblFeePerHour = new javax.swing.JLabel();
        lblOvertimeHours = new javax.swing.JLabel();
        txtOvertimeFeePerHour = new javax.swing.JTextField();
        txtSalaryPerWeek = new javax.swing.JTextField();
        lblOvertimeHoursFee = new javax.swing.JLabel();
        lblSalaryPerWeek = new javax.swing.JLabel();
        btnCalculatePayroll = new javax.swing.JButton();
        btnSaveInformationToFile = new javax.swing.JButton();
        btnSavePayroll = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tAreaInfo = new javax.swing.JTextArea();

        setMinimumSize(new java.awt.Dimension(600, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        lstCashierList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCashierList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCashierListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCashierList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(410, 50, 160, 310);

        pnlCashierInformation.setLayout(null);

        txtPPSNumber.setText("1234567H");
        txtPPSNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPPSNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPPSNumberKeyTyped(evt);
            }
        });
        pnlCashierInformation.add(txtPPSNumber);
        txtPPSNumber.setBounds(120, 30, 130, 20);

        txtName.setText("Vladislavs");
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });
        pnlCashierInformation.add(txtName);
        txtName.setBounds(120, 60, 130, 20);

        txtSurname.setText("Cashier");
        txtSurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSurnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSurnameKeyTyped(evt);
            }
        });
        pnlCashierInformation.add(txtSurname);
        txtSurname.setBounds(120, 90, 130, 20);

        txtAddress.setText("127 new castle");
        pnlCashierInformation.add(txtAddress);
        txtAddress.setBounds(120, 150, 130, 20);

        txtDateOfBirth.setText("07/12/1989");
        txtDateOfBirth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDateOfBirthKeyTyped(evt);
            }
        });
        pnlCashierInformation.add(txtDateOfBirth);
        txtDateOfBirth.setBounds(120, 210, 130, 20);

        lblPPSNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPPSNumber.setText("PPS Number:");
        pnlCashierInformation.add(lblPPSNumber);
        lblPPSNumber.setBounds(10, 30, 100, 20);

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name:");
        pnlCashierInformation.add(lblName);
        lblName.setBounds(10, 60, 100, 20);

        lblSurname.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSurname.setText("Surname:");
        pnlCashierInformation.add(lblSurname);
        lblSurname.setBounds(10, 90, 100, 20);

        lblGender.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGender.setText("Gender:");
        pnlCashierInformation.add(lblGender);
        lblGender.setBounds(10, 120, 100, 20);

        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAddress.setText("Address:");
        pnlCashierInformation.add(lblAddress);
        lblAddress.setBounds(10, 150, 100, 20);

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("City:");
        pnlCashierInformation.add(lblCity);
        lblCity.setBounds(10, 180, 100, 20);

        lblDateOfBirth.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDateOfBirth.setText("Date of birth:");
        pnlCashierInformation.add(lblDateOfBirth);
        lblDateOfBirth.setBounds(10, 210, 100, 20);

        cboxCity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dublin", "Cork", "Limerick", "Galway", "Waterford", "Drogheda", "Kilkenny", "Wexford", "Sligo", "Clonmel", "Co.Dublin", "Co.Cork", "Co.Limerick", "Co.Galway", "Co.Waterford", "Co.Drogheda", "Co.Kilkenny", "Co.Wexford", "Co.Sligo", "Co.Clonmel" }));
        pnlCashierInformation.add(cboxCity);
        cboxCity.setBounds(120, 180, 130, 20);

        cboxGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        pnlCashierInformation.add(cboxGender);
        cboxGender.setBounds(120, 120, 130, 20);

        btnSaveAs.setText("Save As");
        btnSaveAs.setMaximumSize(new java.awt.Dimension(80, 30));
        btnSaveAs.setMinimumSize(new java.awt.Dimension(80, 30));
        btnSaveAs.setPreferredSize(new java.awt.Dimension(80, 30));
        btnSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAsActionPerformed(evt);
            }
        });
        pnlCashierInformation.add(btnSaveAs);
        btnSaveAs.setBounds(50, 250, 80, 30);

        btnSave.setText("Save");
        btnSave.setMaximumSize(new java.awt.Dimension(80, 30));
        btnSave.setMinimumSize(new java.awt.Dimension(80, 30));
        btnSave.setPreferredSize(new java.awt.Dimension(80, 30));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlCashierInformation.add(btnSave);
        btnSave.setBounds(130, 250, 80, 30);

        btnCancel.setText("Cancel");
        btnCancel.setMaximumSize(new java.awt.Dimension(80, 30));
        btnCancel.setMinimumSize(new java.awt.Dimension(80, 30));
        btnCancel.setPreferredSize(new java.awt.Dimension(80, 30));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pnlCashierInformation.add(btnCancel);
        btnCancel.setBounds(210, 250, 80, 30);
        pnlCashierInformation.add(jPanel2);
        jPanel2.setBounds(0, -20, 10, 10);

        jTabbedPane1.addTab("Cashier Information", pnlCashierInformation);

        pnlPayrollCalculation.setLayout(null);

        txtHoursPerWeek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoursPerWeekKeyTyped(evt);
            }
        });
        pnlPayrollCalculation.add(txtHoursPerWeek);
        txtHoursPerWeek.setBounds(240, 90, 100, 20);

        txtFeePerHour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFeePerHourKeyTyped(evt);
            }
        });
        pnlPayrollCalculation.add(txtFeePerHour);
        txtFeePerHour.setBounds(240, 120, 100, 20);

        txtOvertimeHours.setEditable(false);
        pnlPayrollCalculation.add(txtOvertimeHours);
        txtOvertimeHours.setBounds(240, 150, 100, 20);

        lblHoursPerWeek.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHoursPerWeek.setText("Hours per week:");
        pnlPayrollCalculation.add(lblHoursPerWeek);
        lblHoursPerWeek.setBounds(80, 90, 140, 20);

        lblFeePerHour.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFeePerHour.setText("Fee per hour:");
        pnlPayrollCalculation.add(lblFeePerHour);
        lblFeePerHour.setBounds(80, 120, 140, 20);

        lblOvertimeHours.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOvertimeHours.setText("Overtime hours:");
        pnlPayrollCalculation.add(lblOvertimeHours);
        lblOvertimeHours.setBounds(80, 150, 140, 20);

        txtOvertimeFeePerHour.setEditable(false);
        pnlPayrollCalculation.add(txtOvertimeFeePerHour);
        txtOvertimeFeePerHour.setBounds(240, 180, 100, 20);

        txtSalaryPerWeek.setEditable(false);
        pnlPayrollCalculation.add(txtSalaryPerWeek);
        txtSalaryPerWeek.setBounds(240, 210, 100, 20);

        lblOvertimeHoursFee.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOvertimeHoursFee.setText("Overtime fee per hour:");
        pnlPayrollCalculation.add(lblOvertimeHoursFee);
        lblOvertimeHoursFee.setBounds(80, 180, 140, 20);

        lblSalaryPerWeek.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSalaryPerWeek.setText("Salary per week:");
        pnlPayrollCalculation.add(lblSalaryPerWeek);
        lblSalaryPerWeek.setBounds(80, 210, 140, 20);

        btnCalculatePayroll.setText("Calculate");
        btnCalculatePayroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculatePayrollActionPerformed(evt);
            }
        });
        pnlPayrollCalculation.add(btnCalculatePayroll);
        btnCalculatePayroll.setBounds(130, 250, 110, 40);

        btnSaveInformationToFile.setText("Save to file");
        btnSaveInformationToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveInformationToFileActionPerformed(evt);
            }
        });
        pnlPayrollCalculation.add(btnSaveInformationToFile);
        btnSaveInformationToFile.setBounds(240, 250, 110, 40);

        btnSavePayroll.setText("Save");
        btnSavePayroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePayrollActionPerformed(evt);
            }
        });
        pnlPayrollCalculation.add(btnSavePayroll);
        btnSavePayroll.setBounds(20, 250, 110, 40);

        jTabbedPane1.addTab("Payroll Calculation", pnlPayrollCalculation);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 30, 370, 330);

        tAreaInfo.setBackground(new java.awt.Color(0, 0, 0));
        tAreaInfo.setColumns(20);
        tAreaInfo.setEditable(false);
        tAreaInfo.setFont(new java.awt.Font("Courier New", 0, 12));
        tAreaInfo.setForeground(new java.awt.Color(204, 204, 204));
        tAreaInfo.setRows(5);
        jScrollPane2.setViewportView(tAreaInfo);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 370, 560, 170);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPPSNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPPSNumberKeyTyped
        // TODO add your handling code here:
        datavalidation.ppsValidation(evt);
    }//GEN-LAST:event_txtPPSNumberKeyTyped

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        // TODO add your handling code here:
        datavalidation.nameValidation(evt);
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtSurnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurnameKeyTyped
        // TODO add your handling code here:
        datavalidation.nameValidation(evt);
    }//GEN-LAST:event_txtSurnameKeyTyped

    private void txtDateOfBirthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateOfBirthKeyTyped
        // TODO add your handling code here:
        datavalidation.dateValidation(evt);
    }//GEN-LAST:event_txtDateOfBirthKeyTyped

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        autocorrection.nameCorrection(txtName);
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtSurnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurnameKeyReleased
        // TODO add your handling code here:
        autocorrection.nameCorrection(txtSurname);
    }//GEN-LAST:event_txtSurnameKeyReleased

    private void txtPPSNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPPSNumberKeyReleased
        // TODO add your handling code here:
        autocorrection.ppsCorrection(txtPPSNumber);
    }//GEN-LAST:event_txtPPSNumberKeyReleased

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // erase all fields
        txtPPSNumber.setText("");
        txtName.setText("");
        txtSurname.setText("");
        txtAddress.setText("");
        txtDateOfBirth.setText("");
        cboxGender.setSelectedIndex(0);
        cboxCity.setSelectedIndex(0);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        /*
        txtPPSNumber
        txtName
        txtSurname
        cboxGender
        txtAddress
        cboxCity
        txtDateOfBirth
        */

        varCashier.setPPSNumbers(txtPPSNumber.getText());
        varCashier.setName(txtName.getText());
        varCashier.setSurname(txtSurname.getText());
        varCashier.setGender(cboxGender.getSelectedIndex());
        varCashier.setAddress(txtAddress.getText());
        varCashier.setCity(cboxCity.getSelectedIndex());
        varCashier.setDoB(txtDateOfBirth.getText());

        if (!(txtPPSNumber.getText().isEmpty())
                && !(txtName.getText().isEmpty())
                && !(txtSurname.getText().isEmpty())
                && !(txtAddress.getText().isEmpty())
                && (varCashier.checkDob(txtDateOfBirth.getText()))){

            //trying to update the object in array list
            //if cause an error it creates a new object
            try{
                cashierList.set(cashierID, varCashier);
            }catch (Exception e){
                cashierList.add(varCashier);
            }

            //trying to update the element in swing jList
            //if caused an error it creates new element
            try{
            cashierListInfo.setElementAt(varCashier.getName() + " " + varCashier.getSurname(), cashierID);
            }catch (Exception e){
            cashierListInfo.addElement(varCashier.getName() + " " + varCashier.getSurname());
            }

            //writing some information to log area
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Cashier with name: "+ varCashier.getName()
                + " " + varCashier.getSurname() + ", has been saved to array. With ID " + cashierID);
        } else {
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Can not save the information, please fill all information");
        }
        varCashier = new Cashier();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAsActionPerformed
        // TODO add your handling code here:
        varCashier.setPPSNumbers(txtPPSNumber.getText());
        varCashier.setName(txtName.getText());
        varCashier.setSurname(txtSurname.getText());
        varCashier.setGender(cboxGender.getSelectedIndex());
        varCashier.setAddress(txtAddress.getText());
        varCashier.setCity(cboxCity.getSelectedIndex());
        varCashier.setDoB(txtDateOfBirth.getText());

        cashierID = cashierList.size();
        if (!(txtPPSNumber.getText().isEmpty())
                && !(txtName.getText().isEmpty())
                && !(txtSurname.getText().isEmpty())
                && !(txtAddress.getText().isEmpty())
                && (varCashier.checkDob(txtDateOfBirth.getText()))){

            //trying to update the object in array list
            //if cause an error it creates a new object
            
                cashierList.add(cashierID, varCashier);
            

            //trying to update the element in swing jList
            //if caused an error it creates new element
           // lstCashierList.clearSelection();
           
            
            cashierListInfo.addElement(varCashier.getName() + " " + varCashier.getSurname());
            

            //writing some information to log area
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Cashier with name: "+ varCashier.getName()
                + " " + varCashier.getSurname() + ", has been saved to array. With ID " + cashierID);
                
        } else {
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Can not save the information, please fill all information");
            
        }
        varCashier = new Cashier();
    }//GEN-LAST:event_btnSaveAsActionPerformed

    private void lstCashierListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCashierListValueChanged
        // TODO add your handling code here:
        varCashier = new Cashier();
        cashierID = lstCashierList.getSelectedIndex();
        varCashier = cashierList.get(cashierID);
        //print out the information about cashier
        txtPPSNumber.setText(varCashier.getPPSNumber());
        txtName.setText(varCashier.getName());
        txtSurname.setText(varCashier.getSurname());
        cboxGender.setSelectedIndex(varCashier.getGender());
        txtAddress.setText(varCashier.getAddress());
        cboxCity.setSelectedIndex(varCashier.getCity());
        txtDateOfBirth.setText(varCashier.getDoB());
        //print out the information about cashier's payroll
        txtHoursPerWeek.setText(df.format(varCashier.getHoursPerWeek()));
        txtFeePerHour.setText(df.format(varCashier.getStandardFeePerHour()));

        //clear the information about salary
        txtOvertimeFeePerHour.setText("");
        txtSalaryPerWeek.setText("");
       

    }//GEN-LAST:event_lstCashierListValueChanged

    private void btnSavePayrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePayrollActionPerformed
        // TODO add your handling code here:


        try{
        varCashier = cashierList.get(cashierID);
        varCashier.setHoursPerWeek(txtHoursPerWeek.getText());
        varCashier.setStandardFeePerHour(txtFeePerHour.getText());

        if (!(txtHoursPerWeek.getText().isEmpty())
                && !(txtFeePerHour.getText().isEmpty())){
        cashierList.set(cashierID, varCashier);
        tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"payroll information has been updated. To cashier with this " + cashierID + " ID.");
        } else {
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Can not save the information, please fill all information about payroll");

        }
        varCashier = new Cashier();
        } catch (Exception e){
        tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Can not save the information, please please select a person from list");
        }
    }//GEN-LAST:event_btnSavePayrollActionPerformed


    private void btnCalculatePayrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculatePayrollActionPerformed
        // TODO add your handling code here:
        try {
        btnSavePayroll.doClick();
        varCashier = cashierList.get(cashierID);
        txtOvertimeHours.setText(df.format(varCashier.getOvertimeHours()));
        txtOvertimeFeePerHour.setText(df.format(varCashier.getOvertimeFeePerHour()));
        txtSalaryPerWeek.setText(df.format(varCashier.getSalaryPerWeek()));

        tAreaInfo.setText(tAreaInfo.getText() +"\n" +
                "Calculation of cashier salary." );
        varCashier = new Cashier();
        }catch (Exception e){
        tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"cannot calculate the payroll...");
        }

    }//GEN-LAST:event_btnCalculatePayrollActionPerformed

    private void txtHoursPerWeekKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoursPerWeekKeyTyped
        // TODO add your handling code here:
        datavalidation.yearValidation(evt, txtHoursPerWeek);
    }//GEN-LAST:event_txtHoursPerWeekKeyTyped

    private void txtFeePerHourKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFeePerHourKeyTyped
        // TODO add your handling code here:
        datavalidation.currencyValidation(evt);
    }//GEN-LAST:event_txtFeePerHourKeyTyped

    private void btnSaveInformationToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveInformationToFileActionPerformed
        // TODO add your handling code here:
        
            try{
            varCashier = cashierList.get(cashierID);
            PrintWriter writer =new PrintWriter("TXTFILES/"+varCashier.getName()+varCashier.getSurname()+".txt");
            writer.println("\t\tCashier's salary calculation");
            writer.println("\tName\t\t\t\t "+varCashier.getName());
            writer.println("\tSurname\t\t\t\t "+varCashier.getSurname());
            writer.println("\tHours per week\t\t\t "+df.format(varCashier.getHoursPerWeek()));
            writer.println("\tStandard fee per hour\t "+df.format(varCashier.getStandardFeePerHour()));
            writer.println("\tOvertime hours\t\t\t "+df.format(varCashier.getOvertimeHours()));
            writer.println("\tOvertime fee per hour\t "+df.format(varCashier.getOvertimeFeePerHour()));
            writer.print("\tSalary per Week\t\t "+df.format(varCashier.getSalaryPerWeek()));

            writer.flush();
            writer.close();
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"Information was saved sucessfully. in TXTFILES/"+varCashier.getName()+varCashier.getSurname()+".txt");
            } catch (Exception e){
            tAreaInfo.setText(tAreaInfo.getText() +"\n"
                +"cannot save the file...");
            }
    }//GEN-LAST:event_btnSaveInformationToFileActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculatePayroll;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveAs;
    private javax.swing.JButton btnSaveInformationToFile;
    private javax.swing.JButton btnSavePayroll;
    private javax.swing.JComboBox cboxCity;
    private javax.swing.JComboBox cboxGender;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblFeePerHour;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHoursPerWeek;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOvertimeHours;
    private javax.swing.JLabel lblOvertimeHoursFee;
    private javax.swing.JLabel lblPPSNumber;
    private javax.swing.JLabel lblSalaryPerWeek;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JList lstCashierList;
    private javax.swing.JPanel pnlCashierInformation;
    private javax.swing.JPanel pnlPayrollCalculation;
    private javax.swing.JTextArea tAreaInfo;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDateOfBirth;
    private javax.swing.JTextField txtFeePerHour;
    private javax.swing.JTextField txtHoursPerWeek;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOvertimeFeePerHour;
    private javax.swing.JTextField txtOvertimeHours;
    private javax.swing.JTextField txtPPSNumber;
    private javax.swing.JTextField txtSalaryPerWeek;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables

}
